// <auto-generated />
using System;
using Ictx.WebApp.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Ictx.WebApp.Api.Data.Migrations.Application
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.5")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Ictx.WebApp.Core.Entities.Dipendente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CodiceFiscale")
                        .IsRequired()
                        .HasColumnType("char(16)");

                    b.Property<string>("Cognome")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<DateTime>("DataNascita")
                        .HasColumnType("datetime2");

                    b.Property<int>("DittaId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Inserted")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("Sesso")
                        .IsRequired()
                        .HasColumnType("char(1)");

                    b.Property<DateTime>("Updated")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("DittaId");

                    b.ToTable("Dipendente");
                });

            modelBuilder.Entity("Ictx.WebApp.Core.Entities.Ditta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CodiceDitta")
                        .HasColumnType("int");

                    b.Property<string>("Denominazione")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<int>("ImpresaId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Inserted")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Updated")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ImpresaId");

                    b.ToTable("Ditta");
                });

            modelBuilder.Entity("Ictx.WebApp.Core.Entities.Impresa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CodiceImpresa")
                        .HasColumnType("int");

                    b.Property<string>("Denominazione")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<DateTime>("Inserted")
                        .HasColumnType("datetime2");

                    b.Property<int>("UfficioId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Updated")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("UfficioId");

                    b.ToTable("Impresa");
                });

            modelBuilder.Entity("Ictx.WebApp.Core.Entities.Ufficio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CodiceUfficio")
                        .HasColumnType("int");

                    b.Property<string>("Denominazione")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<DateTime>("Inserted")
                        .HasColumnType("datetime2");

                    b.Property<int>("UfficioBaseId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Updated")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("UfficioBaseId");

                    b.ToTable("Ufficio");
                });

            modelBuilder.Entity("Ictx.WebApp.Core.Entities.UfficioBase", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CodiceUfficioBase")
                        .HasColumnType("int");

                    b.Property<string>("Denominazione")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<DateTime>("Inserted")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Updated")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("UfficioBase");
                });

            modelBuilder.Entity("Ictx.WebApp.Core.Entities.Dipendente", b =>
                {
                    b.HasOne("Ictx.WebApp.Core.Entities.Ditta", "Ditta")
                        .WithMany("LstDipendenti")
                        .HasForeignKey("DittaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ditta");
                });

            modelBuilder.Entity("Ictx.WebApp.Core.Entities.Ditta", b =>
                {
                    b.HasOne("Ictx.WebApp.Core.Entities.Impresa", "Impresa")
                        .WithMany("LstDitte")
                        .HasForeignKey("ImpresaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Impresa");
                });

            modelBuilder.Entity("Ictx.WebApp.Core.Entities.Impresa", b =>
                {
                    b.HasOne("Ictx.WebApp.Core.Entities.Ufficio", "Ufficio")
                        .WithMany("LstImprese")
                        .HasForeignKey("UfficioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ufficio");
                });

            modelBuilder.Entity("Ictx.WebApp.Core.Entities.Ufficio", b =>
                {
                    b.HasOne("Ictx.WebApp.Core.Entities.UfficioBase", "UfficioBase")
                        .WithMany("LstUffici")
                        .HasForeignKey("UfficioBaseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UfficioBase");
                });

            modelBuilder.Entity("Ictx.WebApp.Core.Entities.Ditta", b =>
                {
                    b.Navigation("LstDipendenti");
                });

            modelBuilder.Entity("Ictx.WebApp.Core.Entities.Impresa", b =>
                {
                    b.Navigation("LstDitte");
                });

            modelBuilder.Entity("Ictx.WebApp.Core.Entities.Ufficio", b =>
                {
                    b.Navigation("LstImprese");
                });

            modelBuilder.Entity("Ictx.WebApp.Core.Entities.UfficioBase", b =>
                {
                    b.Navigation("LstUffici");
                });
#pragma warning restore 612, 618
        }
    }
}
